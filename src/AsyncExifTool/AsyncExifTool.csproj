<Project Sdk="Microsoft.NET.Sdk">

  <PropertyGroup>
    <!-- 
    Also target net461. This is because .NET 4.6.1 does not support NetStandard 2.0, even though it claims to. 
    See  https://docs.microsoft.com/en-us/dotnet/standard/library-guidance/cross-platform-targeting#multi-targeting 
    -->
    <TargetFrameworks>netstandard2.0;netstandard2.1;net461</TargetFrameworks>
	  <RootNamespace>CoenM.ExifToolLib</RootNamespace>
    <IsPackable>true</IsPackable>
    <NeutralLanguage>en</NeutralLanguage>
    <PackageReleaseNotes>
      * Initial release;
      * C#8 syntax;
      * NETSTANDARD2.1 differs from other targets as it depends on IAsyncDisposable, instead of IDisposable;
      * ExifTool is not included;
      * Samples and unittests, and documentation available at github repository;
      * Including ReSharper annotations xml file.
    </PackageReleaseNotes>
  </PropertyGroup>

  <ItemGroup>
    <PackageReference Include="MedallionShell" />
    <PackageReference Include="Nito.AsyncEx" />
  </ItemGroup>

  <PropertyGroup Condition="'$(TargetFramework)' == 'netstandard2.1'">
    <DefineConstants>$(DefineConstants);FEATURE_ASYNC_DISPOSABLE</DefineConstants>
  </PropertyGroup>

  <!--  https://github.com/dotnet/sdk/issues/335#issuecomment-271186591 -->
  <PropertyGroup Condition=" '$(OS)' != 'Windows_NT' AND '$(TargetFramework)' == 'net461' ">
    <FrameworkPathOverride>$(NuGetPackageRoot)microsoft.targetingpack.netframework.v4.6.1/1.0.1/lib/net461/</FrameworkPathOverride>
    <RestoreAdditionalProjectSources>$(RestoreAdditionalProjectSources);https://dotnet.myget.org/F/dotnet-core/api/v3/index.json</RestoreAdditionalProjectSources>
  </PropertyGroup>

  <ItemGroup Condition=" '$(OS)' != 'Windows_NT' AND '$(TargetFramework)' == 'net461' ">
    <PackageReference Include="Microsoft.TargetingPack.NETFramework.v4.6.1" Version="1.0.1" ExcludeAssets="All" PrivateAssets="All" />
  </ItemGroup>
</Project>
